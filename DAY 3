//Maximum and minimum of an array using minimum number of comparisons

#include <iostream>
#include <vector>
using namespace std;

pair<int, int> findMinMax(const vector<int>& arr) {
    int n = arr.size();
    int minVal, maxVal;
    int i;

    // If even number of elements
    if (n % 2 == 0) {
        if (arr[0] < arr[1]) {
            minVal = arr[0];
            maxVal = arr[1];
        } else {
            minVal = arr[1];
            maxVal = arr[0];
        }
        i = 2;
    } 
    // If odd number of elements
    else {
        minVal = maxVal = arr[0];
        i = 1;
    }

    // Compare in pairs
    while (i < n - 1) {
        int localMin, localMax;
        if (arr[i] < arr[i + 1]) {
            localMin = arr[i];
            localMax = arr[i + 1];
        } else {
            localMin = arr[i + 1];
            localMax = arr[i];
        }

        if (localMin < minVal) minVal = localMin;
        if (localMax > maxVal) maxVal = localMax;

        i += 2; // move in pairs
    }

    return {minVal, maxVal};
}

int main() {
    vector<int> arr = {100, 23, 45, 2, 89, 300, 1, 76};

    pair<int, int> result = findMinMax(arr);

    cout << "Minimum: " << result.first << endl;
    cout << "Maximum: " << result.second << endl;

    return 0;
}
